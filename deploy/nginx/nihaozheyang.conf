// ...existing code...
server {
    listen 80;
    server_name nihaozheyang.xyz; # <- 请替换为你的域名

    # 把所有 HTTP 请求重定向到 HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name nihaozheyang.xyz; # <- 请替换为你的域名

    # 使用 Let's Encrypt 获取的证书（或你的证书路径）
    ssl_certificate /etc/letsencrypt/live/nihaozheyang.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nihaozheyang.xyz/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    root /var/www/nihaozheyang;
    index index.html;

    # 静态文件缓存（可按需调整）
    location ~* \.(?:css|js|json|xml|txt|jpg|jpeg|gif|png|svg|ico|webp|ttf|woff|woff2)$ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # SPA 路由：未匹配的请求返回 index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 保护隐藏文件
    location ~ /\. {
        deny all;
    }

    # 可选：如果有后端 API 需要反向代理，示例（修改 upstream/端口）
    # location /api/ {
    #     proxy_pass http://127.0.0.1:3000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # 常见安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header X-XSS-Protection "1; mode=block" always;
}